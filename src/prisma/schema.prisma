datasource db {
    provider = "postgres" // or "postgresql", depending on your database
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    name      String
    password  String
    role      Role     @default(PARTICIPANT)
    createdAt DateTime @default(now())
    team      Team?    @relation(fields: [teamId], references: [id])
    teamId    Int?
    regNo     String
}

model Team {
    id        Int        @id @default(autoincrement())
    teamName  String     @unique
    createdAt DateTime   @default(now())
    members   User[]
    portfolio Portfolio?
}

model Portfolio {
    id           Int           @id @default(autoincrement())
    teamId       Int           @unique
    balance      Float         @default(0.0)
    createdAt    DateTime      @default(now())
    team         Team          @relation(fields: [teamId], references: [id])
    transactions Transaction[]
}

model Stock {
    id                Int           @id @default(autoincrement())
    ticker            String        @unique
    stockName         String
    createdAt         DateTime      @default(now())
    participantStocks Int
    promoterStocks    Int
    prices            StockPrice[]
    transactions      Transaction[]
}

model StockPrice {
    id           Int      @id @default(autoincrement())
    stockId      Int
    stockName    String
    price        Float
    openingPrice Float
    lowerRange   Float
    upperRange   Float
    priceDate    DateTime @default(now())
    stock        Stock    @relation(fields: [stockId], references: [id])

    @@map("stock_prices")
}

// model StockPrice {
//     id           Int      @id @default(autoincrement())
//     stockId      Int
//     price        Float
//     openingPrice Float
//     lowerRange   Float
//     upperRange   Float
//     priceDate    DateTime @default(now())
//     stock        Stock    @relation(fields: [stockId], references: [id])

//     @@map("stock_prices")
// }

model Transaction {
    id              Int             @id @default(autoincrement())
    portfolioId     Int
    stockId         Int
    transactionType TransactionType
    quantity        Int
    price           Float
    transactionDate DateTime        @default(now())
    portfolio       Portfolio       @relation(fields: [portfolioId], references: [id])
    stock           Stock           @relation(fields: [stockId], references: [id])
}

enum TransactionType {
    BUY
    SELL
}

enum Role {
    ADMIN
    PARTICIPANT
}
